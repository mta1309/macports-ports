# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

# Keep mongo-tools at the same version as mongodb.

github.setup        mongodb mongo-tools 4.0.3 r
checksums           rmd160  aae7ec8366be1fc72cea3168f3f5153047eeb8db \
                    sha256  d56a2501b9bd62230b701cf46c72ce12fae68903b236fe486129d3eb3fbbbd42 \
                    size    10873983

categories          devel
platforms           darwin
maintainers         {ryandesign @ryandesign} openmaintainer
license             Apache-2

description         utilities for working with mongodb databases: bsondump, \
                    mongoimport, mongoexport, mongodump, mongorestore, \
                    mongostat, mongofiles, mongooplog, mongotop

long_description    mongo-tools is a collection of utilities for working with \
                    mongodb databases: \
                    \
                    \n\n* bsondump: display BSON files in a human-readable format \
                    \n* mongoimport: Convert data from JSON, TSV or CSV and insert them into a collection \
                    \n* mongoexport: Write an existing collection to CSV or JSON format \
                    \n* mongodump: Dump MongoDB backups to disk in .BSON format \
                    \n* mongorestore: Restore MongoDB backups in .BSON format to a live database \
                    \n* mongostat: Monitor live MongoDB servers, replica sets, or sharded clusters \
                    \n* mongofiles: Read, write, delete, or update files in GridFS \
                    \n* mongotop: Monitor read/write activity on a mongo server \
                    \n* mongoreplay: Inspect and record commands sent to a MongoDB instance, and then replay the commands back onto another host at a later time

depends_build       port:go \
                    port:pkgconfig

depends_lib         port:libpcap \
                    path:lib/libssl.dylib:openssl

use_configure       no

build.cmd           ./build.sh
build.args          ssl sasl
build.target

destroot {
    copy {*}[glob ${worksrcpath}/bin/*] ${destroot}${prefix}/bin/

    set docdir ${prefix}/share/doc/${subport}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} \
        CONTRIBUTING.md \
        LICENSE.md \
        README.md \
        ${destroot}${docdir}
}

github.livecheck.regex  {(\d+\.\d*[02468]\.\d+)}
