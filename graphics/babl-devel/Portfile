# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compiler_blacklist_versions 1.0

name                babl-devel
conflicts           babl
set git_name        babl
set git_commit      928aeb093f6875249c77551c2d0449c9b42b1406
set git_date        20181005
version             0.1.59-${git_date}
license             LGPL-3+
categories          graphics
maintainers         {devans @dbevans}
platforms           darwin

description         Babl is a library for dynamically handling pixel formats and managing \
                    conversions between them. This is the development version based on a \
                    recent snapshot of upstream git master.

long_description    ${description}

homepage            http://gegl.org/babl
master_sites        https://gitlab.gnome.org/GNOME/${git_name}/-/archive/${git_commit}/

distname            ${git_name}-${git_commit}

use_bzip2           yes

checksums           rmd160  8ca292d0d08eb44b1da66e98407cc369545e316e \
                    sha256  bd0b50dd34f5f6891e042c0a0f5fe2f17c77798ee9dc34a8afe9f045a5d597ec \
                    size    314762

depends_build       port:automake \
                    port:autoconf \
                    port:libtool

# In 0.1.12, i386 fails to compile with SL's gcc-4.2:
#    babl-cpuaccel.c:169: error: ‘asm’ operand has impossible constraints
compiler.blacklist-append *gcc-3.* *gcc-4.*

# additionally blacklist compilers that don't support C11 (typedef redefinition in C)
# babl-icc.c:1031:25: error: redefinition of typedef 'UTF8' is invalid in C
compiler.blacklist-append {clang < 300}

configure.cmd       ./autogen.sh
                
configure.args      --disable-silent-rules \
                    ac_cv_prog_AWK=/usr/bin/awk
 
# CC_FOR_BUILD is used by config.guess to determine processor type
if {![variant_isset universal]} {
    configure.env-append CC_FOR_BUILD="${configure.cc} ${configure.cc_archflags}"
} else {
    foreach arch ${configure.universal_archs} {
        lappend merger_configure_env(${arch})  CC_FOR_BUILD='${configure.cc} -arch ${arch}'
    }
}

livecheck.type      none
