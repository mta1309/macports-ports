# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           xcode 1.0
PortGroup           github 1.0

github.setup        mas-cli mas 1.4.3 v
revision            0
categories          sysutils
description         Mac App Store command line interface
long_description    A simple command line interface for the Mac App Store. \
                    Designed for scripting and automation.
license             MIT

maintainers         {kimuraw @kimuraw} openmaintainer
platforms           darwin

depends_build       port:carthage
checksums           md5     0cbfbe30a3ef6c1457b8c044fffb848f \
                    sha1    5cc012dc28adf355c8453ba8d9e9533971183cfd \
                    sha256  276f15ae19d22f51118bba215f67281f0c06f35a2c8d32d2877c9fbc498e91a9

# requirements:
# - mas: Xcode 10 or later
# - carthage: Xcode 9 or later (0.30.x)
set xcodeversion_min_required 10
pre-fetch {
    if {[vercmp ${xcodeversion} ${xcodeversion_min_required}] < 0} {
        ui_error "${name} @${version} requires Xcode ${xcodeversion_min_required} or later but you have Xcode ${xcodeversion}."
        ui_error "See https://guide.macports.org/chunked/installing.xcode.html for download links."
        return -code error "incompatible Xcode version"
    }
}

xcode.project       mas-cli.xcodeproj
xcode.configuration Release
xcode.scheme        "mas-cli Release"
xcode.destroot.type none
# CODE_SIGN_IDENTITY: disable codesign
# LD_RUNPATH_SEARCH_PATHS: override "/usr/local/Frameworks ..." in xcodeproj
xcode.build.settings    CODE_SIGN_IDENTITY= \
                        DSTROOT=${worksrcpath}/dst \
                        LD_RUNPATH_SEARCH_PATHS='@executable_path/../Library/Frameworks @executable_path/../Library/Frameworks/MasKit.framework/Versions/A/Frameworks/'
# fix "IDELogStore: Failed to open log store".
# xcodebuild's `-derivedDataPath` does not solve this error.
build.pre_args          -IDECustomDerivedDataLocation=${worksrcpath}/DerivedData

pre-build {
    system -W ${worksrcpath} "${prefix}/bin/carthage build --platform macOS"
}

destroot {
    # bin/mas
    xinstall -W ${worksrcpath} dst/bin/mas ${destroot}${prefix}/bin

    # Library/Frameworks/MasKit.framework
    xinstall -d ${destroot}${prefix}/Library/Frameworks
    copy ${worksrcpath}/build/Release/MasKit.framework ${destroot}${prefix}/Library/Frameworks

    # other resources
    xinstall -d ${destroot}${prefix}/share/doc/${name}
    xinstall -W ${worksrcpath} README.md LICENSE \
        CHANGELOG.md CODE_OF_CONDUCT.md CONTRIBUTING.md \
        ${destroot}${prefix}/share/doc/${name}
}
