# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0

name                    gpsd

license                 BSD
categories              net
maintainers             {ryandesign @ryandesign} {michaelld @michaelld} openmaintainer
platforms               darwin

description             GPS service daemon

long_description        GPSD is a service daemon that handles GPSes and other \
                        navigation-related sensors reporting over USB, serial, \
                        TCP/IP, or UDP connections and presents reports in \
                        a well-documented JSON format.  The package also \
                        includes a number of clients which can be run against \
                        a local GPSD or a GPSD on another machine.

homepage                http://www.catb.org/${name}/

subport gpsd-devel {}

if {${subport} eq ${name}} {

    # release
    conflicts           gpsd-devel

    version             3.17
    revision            2
    checksums           rmd160 7aeacd58b7374b392e691fc470dc9a644169ba8a \
                        sha256 68e0dbecfb5831997f8b3d6ba48aed812eb465d8c0089420ab68f9ce4d85e77a \
                        size   8755304

    master_sites        savannah

    # change API to avoid conflict with mach's policy_t
    # gps policy_t -> gps_policy_t.
    # this change does not seem to conflict with dependent ports
    patchfiles-append   patch-fix_policy_t.diff

    patchfiles-append   patch-SConstruct.diff

    # GPSD requires Python 2.6, 2.7, or 3.2+, but for now we just base
    # it on 2.7.  The Python Portgroup breaks the C installs, so we
    # can't use it until the port is split up between the C/C++ and
    # Python code.

    depends_run             port:python27
    configure.python        ${prefix}/bin/python2.7

    post-destroot {
        reinplace "s|#!/usr/bin/env python|#!${configure.python}|" \
            ${destroot}${prefix}/bin/gegps
        reinplace "s|#!/usr/bin/env python|#!${configure.python}|" \
            ${destroot}${prefix}/bin/gpscat
        reinplace "s|#!/usr/bin/env python|#!${configure.python}|" \
            ${destroot}${prefix}/bin/gpsfake
        reinplace "s|#!/usr/bin/env python|#!${configure.python}|" \
            ${destroot}${prefix}/bin/gpsprof
        if {[variant_isset xgps]} {
            reinplace "s|#!/usr/bin/env python|#!${configure.python}|" \
                ${destroot}${prefix}/bin/xgps
            reinplace "s|#!/usr/bin/env python|#!${configure.python}|" \
                ${destroot}${prefix}/bin/xgpsspeed
        }
        system -W ${destroot}${prefix}/lib "install_name_tool -id ${prefix}/lib/libgps.dylib libgps.dylib"
    }

    livecheck.type          regex
    livecheck.url           https://download.savannah.gnu.org/releases/gpsd/
    livecheck.regex         "${name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"

} else {

    # devel
    conflicts           gpsd

    version             20180919
    set commit          bbc75abc4f34b5bca4c0842986dffbf952d0077a
    checksums           rmd160 aee030971a9fb559f5285a61fab536ac906fdc3a \
                        sha256 e603aefd549f2a93576f1fbc39491073c32052955258eb180d9505654c7ece3a \
                        size   9770512

    master_sites        http://git.savannah.gnu.org/cgit/gpsd.git/snapshot
    distname            ${name}-${commit}

    # GPSD requires Python 2.6, 2.7, or 3.2+; don't use 2.6, 3.2, or
    # 3.3, since we're weaning MP off of them.

    set pythons_suffixes {27 34 35 36 37}

    set pythons_ports {}
    foreach s ${pythons_suffixes} {
        lappend pythons_ports python${s}
    }

    foreach s ${pythons_suffixes} {
        set p python${s}
        set v [string index ${s} 0].[string index ${s} 1]
        set i [lsearch -exact ${pythons_ports} ${p}]
        set c [lreplace ${pythons_ports} ${i} ${i}]
        variant ${p} description "Build ${name} to use Python ${v}" conflicts {*}${c} ""
    }

    # default to +python27
    set selected_python_ver_no_dot "27"
    foreach s ${pythons_suffixes} {
        if {[variant_isset python${s}]} {
            set selected_python_ver_no_dot ${s}
        }
    }
    default_variants +python${selected_python_ver_no_dot}

    # make sure -python27 isn't specified alone
    set selected_python_ver_no_dot ""
    foreach s ${pythons_suffixes} {
        if {[variant_isset python${s}]} {
            set selected_python_ver_no_dot ${s}
        }
    }
    if {${selected_python_ver_no_dot} eq ""} {
        ui_error "\n\nYou must select one of the Python variants: +python27, +python34, +python35, +python36, or +python37.\n"
    return -code error "Invalid Python variant selection"
    }

    set selected_python_ver_with_dot [join [split ${selected_python_ver_no_dot} ""] .]

    depends_run-append      port:python${selected_python_ver_no_dot}
    configure.python        ${prefix}/bin/python${selected_python_ver_with_dot}

    # fix Python executable to use
    patchfiles-append patch-fix_py_exe.devel.diff
    patch.pre_args -p1

    post-patch {
        foreach tf \
            {SConstruct contrib/ntpshmviz contrib/ubxtool \
             contrib/webgps.py contrib/zerk devtools/ais.py \
             devtools/aivdmtable devtools/cycle_analyzer \
             devtools/flocktest devtools/identify_failing_build_options.py \
             devtools/regress-builder devtools/regressdiff devtools/sizes \
             devtools/striplog devtools/tablegen.py \
             devtools/test_json_validity.py devtools/uninstall_cleanup.py \
             gegps gps/gps.py gpscat gpsfake gpsprof jsongen.py \
             leapsecond.py maskaudit.py test_maidenhead.py test_misc.py \
             valgrind-audit.py www/gps_report.cgi.in \
             xgps xgpsspeed} {
                reinplace "s|@MP_PY_EXE@|${configure.python}|" \
                    ${worksrcpath}/${tf}
            }
    }

    livecheck.type          regex
    livecheck.version       ${commit}
    livecheck.url           http://git.savannah.gnu.org/cgit/gpsd.git
    livecheck.regex         "id=(\[0-9a-f\]*)'>HEAD"
}

depends_lib-append      port:ncurses
depends_build-append    port:scons port:pkgconfig

use_configure           no

set cxx_stdlibflags {}
if {[string match *clang* ${configure.cxx}]} {
    set cxx_stdlibflags -stdlib=${configure.cxx_stdlib}
}

build.cmd               ${prefix}/bin/scons
build.target
build.args              prefix=${prefix} \
                        target_python=${configure.python} \
                        qt=no \
                        usb=no \
                        strip=no \
                        dbus_export=no \
                        xgps=no
build.env-append        CC="${configure.cc} [get_canonical_archflags cc]" \
                        CFLAGS="${configure.cflags}" \
                        CXX="${configure.cxx} [get_canonical_archflags cxx] ${cxx_stdlibflags}" \
                        CXXFLAGS="${configure.cxxflags}" \
                        LDFLAGS="${configure.ldflags}"

# Allow the regression tests to be run via "port test gpsd".
#
# The speed of the daemon tests is highly dependent on the WRITE_PAD value.
# Empirically, 200us seems to be adequate on a MacPro, and 500us seems to be
# adequate on a PowerBook G4, but even 2ms is sometimes inadequate under 10.12,
# so we use 5ms here.  If needed, this value can be overridden with
# WRITE_PAD=XXX on the command line, but only if WRITE_PAD is included in
# extra_env in macports.conf.  In all cases, the WRITE_PAD value in use is
# reported by the test framework and is visible with -v.
#
# Note also that the MacPorts sandbox doesn't allow ptys, so the daemon tests
# report "gpsfake: ptys not available, falling back to UDP.", but still work.
# This can be worked around by running "scons testregress" directly in
# ${worksrcpath}, rather than running it via "port test".
#
# The test phase duplicates the arguments and environment (except WRITE_PAD)
# from the build phase, mainly to avoid gratuitous rebuilds between the phases.
#
# The GPSD build procedure supports parallel tests, but there's no built-in
# MacPorts support for parallel tests, nor is there a test.jobs variable, so
# we just augment test.cmd with build.jobs.
#
test.run                yes
test.cmd                ${build.cmd} -j${build.jobs}
test.target             testregress
set test.args           ${build.args}
set test.env            ${build.env}
if { [info exists ::env(WRITE_PAD)] } {
    test.env-append     WRITE_PAD=$::env(WRITE_PAD)
} else {
    test.env-append     WRITE_PAD=0.005
}

destroot.args           {*}${build.args}
destroot.env-append     {*}${destroot.destdir} {*}${build.env}

# Although GPSD has successfully been built with Qt5 at one time, that build
# is currently broken.  Until the build issue is sorted out, Qt support is
# limited to Qt4.
#
variant qt description {Build Qt4 bindings} {
    PortGroup               qt4 1.0
    # The following two lines are a workaround for #50347
    build.env-append        PKG_CONFIG_PATH=${qt_pkg_config_dir}
    test.env-append         PKG_CONFIG_PATH=${qt_pkg_config_dir}

    build.args-delete       qt=no
    build.args-append       qt=yes
    test.args-delete        qt=no
    test.args-append        qt=yes
    destroot.args-delete    qt=no
    destroot.args-append    qt=yes
}

variant libusb \
description {Include support for better USB device discovery} {
    depends_lib-append      port:libusb
    build.args-delete       usb=no
    build.args-append       usb=yes
    test.args-delete        usb=no
    test.args-append        usb=yes
    destroot.args-delete    usb=no
    destroot.args-append    usb=yes
}

variant dbus description {Include support for DBUS} {
    depends_lib-append      port:dbus-glib
    build.args-delete       dbus_export=no
    build.args-append       dbus_export=yes
    test.args-delete        dbus_export=no
    test.args-append        dbus_export=yes
    destroot.args-delete    dbus_export=no
    destroot.args-append    dbus_export=yes
}

variant xgps \
description {Include xgps/xgpsspeed X11 clients (dependency-intensive)} {
    depends_run-append      port:py27-cairo port:py27-gobject3 port:gtk3
    build.args-delete       xgps=no
    build.args-append       xgps=yes
    test.args-delete        xgps=no
    test.args-append        xgps=yes
    destroot.args-delete    xgps=no
    destroot.args-append    xgps=yes
}

if {![variant_isset xgps]} {
    notes "The xgps variant is now needed to get the xgps and xgpsspeed programs."
}
